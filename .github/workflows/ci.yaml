# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:15-alpine
        # Provide the password for postgres
        env:
          POSTGRES_DB: bank_app_database
          POSTGRES_USER: bank_app_user
          POSTGRES_PASSWORD: BankApp123
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v4

    - name: Test
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    -name: Install golang migrate
     run: curl -L https://github.com/golang-migrate/migrate/releases/download/$version/migrate.$os-$arch.tar.gz | tar xvz
    
    - name: Run migrations
      run: make migrateup
        

    # - name: Build
    #   run: go build -v ./...

    - name: Test
      run: make test
