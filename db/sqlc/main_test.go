package db

import (
	"context"
	"log"
	"os"
	"testing"

	"github.com/jackc/pgx/v5/pgxpool" // Correct import for pgx connection pool
	// Import for loading environment variables
)

// Queries is the struct generated by sqlc
var testQueries *Queries

var testDB *pgxpool.Pool // Use pgxpool.Pool to handle pooled connections

const (
	dbDriver = "postgres"
	DBSource = "postgresql://bank_app_user:BankApp123@localhost:5432/bank_app_database?sslmode=disable"
)

func TestMain(m *testing.M) {
	var err error

	// Create a new pgx connection pool
	testDB, err = pgxpool.New(context.Background(), DBSource) // Use pgxpool.New, not pgx.New
	if err != nil {
		log.Fatal("cannot connect to db:", err)
	}

	// Ensure the connection pool is closed after tests
	defer testDB.Close()

	// Create a Queries instance using the pgx connection pool
	testQueries = New(testDB)

	// Run the tests
	os.Exit(m.Run())
}
